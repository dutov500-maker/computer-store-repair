import { readFileSync, writeFileSync } from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);
const rootDir = join(__dirname, '..');

const mode = process.argv[2] || 'local';

if (!['local', 'production'].includes(mode)) {
  console.error('‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ä–µ–∂–∏–º. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: local –∏–ª–∏ production');
  process.exit(1);
}

try {
  const sourceFile = join(rootDir, 'backend', `func2url.${mode}.json`);
  const targetFile = join(rootDir, 'backend', 'func2url.json');
  
  const config = readFileSync(sourceFile, 'utf-8');
  writeFileSync(targetFile, config);
  
  console.log(`‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ ${mode} API`);
  
  if (mode === 'local') {
    console.log('üîß –õ–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
    console.log('üìç API: http://localhost:3001');
    console.log('');
    console.log('–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä:');
    console.log('  cd local-server');
    console.log('  npm install');
    console.log('  npm start');
  } else {
    console.log('üåê Production —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
    console.log('üìç API: poehali.dev');
  }
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  process.exit(1);
}
